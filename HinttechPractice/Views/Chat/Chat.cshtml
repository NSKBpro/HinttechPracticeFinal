@{
    ViewBag.Title = "Chat";
}
<br />
<head>
    <title>Chat</title>
    <style>
        #chatRoom {
            height: 300px;
            overflow-y: scroll;
            width: 100%;
        }

        #sendMessage {
            background-color: #ccc;
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            border-radius: 7px;
            color: #fff;
            font-family: 'Oswald';
            font-size: 20px;
            text-decoration: none;
            cursor: pointer;
            border: none;
            width: 7em;
            height: 2.8em;
        }



            #sendMessage:hover {
                border: none;
                background: red;
                box-shadow: 0px 0px 1px #777;
            }
    </style>
</head>




<div class="panel panel-default" style="max-width: 700px;z-index:-1; float:inherit; padding-bottom:0px;">
    <div class="panel-footer" style="height:270px" id="chatRoom">
        <input type="hidden" id="displayName" /> <a id="chatWith"></a>
        <ul id="discussion"></ul>
    </div>
    <div class="panel-body" style="max-width: 700px;" id="chatPanel">
        <textarea class="form-control" id="message" style="min-width: 500px; float:left; z-index: 1;" rows="2"></textarea>
        <button class="btn btn-primary" id="sendMessage" style="z-index: 1; float: right;">Send</button>
    </div>
    <div id="zaChat"></div>
</div>



<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<script src="~/signalr/hubs"></script>
<script>

    var chatWith;
    var usernameFrom;
    var showHide = [];
    var chat = $.connection.chatHub;
    var messageTemp;
    var loadPrivateMessages = 0;
    var dayOfWeekS;
    var now = new Date();
    var weekday = new Array(7);
    var notifications = $.connection.notifierHub;

    weekday[0] = "Sunday";
    weekday[1] = "Monday";
    weekday[2] = "Tuesday";
    weekday[3] = "Wednesday";
    weekday[4] = "Thursday";
    weekday[5] = "Friday";
    weekday[6] = "Saturday";
    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

    

    function returnTimestamp(dateForTimestamp) {
        var timestamp;
    var dayTimestamp = weekday[dateForTimestamp.getDay() % 7];
    timestamp = dayTimestamp + " " + dateForTimestamp.getHours() + ":" + dateForTimestamp.getMinutes() + ":" + dateForTimestamp.getSeconds();
        return timestamp;
    }

    /*function loadPrivateMessagesFunction(to) {
        $(function () {
            $.connection.hub.start().done(function () {
                chat.server.loadPrivateMessagesHistory(to, usernameFrom);
            });
        });
    };*/
    

   /* if (days[now.getDay()] == dayTimestamp) {
        dayOfWeekS = "Today";
        timestamp = dayOfWeekS + "&nbsp";
    } else
    {
        timestamp = dayTimestamp + "&nbsp";
    }*/
    function doIt(to) {
        $(function () {

            usernameFrom = "@Context.User.Identity.Name"
            

            chat.client.addNewMessageToPage = function (name, message, recipientName, previousMessages) {
                if (message != "" && message != null) {
                    if (previousMessages != null) {
                        var dateForTimestamp = new Date();
                        if (loadPrivateMessages === 0) {
                            for (var j = 0; j < previousMessages.length - 1; j++) {
                                var dateTemp = new Date(previousMessages[j].DateCreated);
                                $('#' + name + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(previousMessages[j].Sender) +
                                    '</strong>: ' + htmlEncode(previousMessages[j].Message) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateTemp) + '</small></span>');
                                loadPrivateMessages = 1;
                            }
                        } else {
                            $('#' + name + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(name) +
                                    '</strong>: ' + htmlEncode(message) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateForTimestamp) + '</small></span>');
                        }
                    }
                    
                }
                
            };

            $("#" + to + "ChatInput").focus();
            $.connection.hub.start().done(function () {

                var chatInputEnter = document.getElementById(to + "ChatInput");
                var dateForTimestamp = new Date();
                messageTemp = $("#" + to + "ChatInput").val();
                if (messageTemp != "" && messageTemp != null) {
                    chat.server.send(usernameFrom, $("#" + to + "ChatInput").val(), to);
                    $('#' + to + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode("Me") +
                        '</strong>: ' + htmlEncode(messageTemp) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateForTimestamp) + '</small></span>');
                    chat.server.sendMessageNotification(usernameFrom, messageTemp, to);
                    
                }
                $("#" + to + "ChatInput").val('').focus();
            });

        });
        var objDiv = document.getElementById(to + "Window");
        objDiv.scrollTop = objDiv.scrollHeight;
    }

    $(function doIt2() {

        usernameFrom = "@Context.User.Identity.Name";

        //meda
        chat.client.addNewMessageToPage = function (name, message, recipientName, previousMessages) {

            if (recipientName != null) {
                $('#' + name + 'UlWindow').append('<li><strong>' + htmlEncode(name) +
                    '</strong>: ' + htmlEncode(message) + '</li>');
                

            } else {

                var imageForUser;
                @foreach (var u in ViewBag.users)
                    {
                        var imgSrc = "/Content/img/empty.png";
                        if (u.profilePicture != null)
                        {
                        var base64 = Convert.ToBase64String(@u.profilePicture);
                            imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                        }
                        var usernameFrom2 = "@Context.User.Identity.Name";


                        <text>
                if (name == '@u.username') {
                    imageForUser = '<img src="@imgSrc" height="25" width="25"/ >';
                }
                </text>
                    }


                $.connection.hub.start().done(function () {
                    if (message != "" && message != null) {
                        chat.server.send(usernameFrom, $('#message').val(), null);

                        $('#discussion').append('<li><strong>' + imageForUser + htmlEncode(name) +
                  '</strong>: ' + htmlEncode(message) + '</li>')
                    }
                });

            }
        }
        //meda

        $('#message').focus();


        $.connection.hub.start().done(function () {
            var chatInputEnter = document.getElementById(chatWith + "ChatInput");
            if ($('#' + usernameFrom + "ChatInput").val() != null) {
                chat.server.send(usernameFrom, $('#' + usernameFrom + "ChatInput").val(), chatWith);
                $('#' + chatWith + 'UlWindow').append('<li><strong>' + htmlEncode("Me") +
                        '</strong>: ' + htmlEncode(messageTemp) + '</li>');
                
            }

        });
    });

    $(function () {
        usernameFrom = "@Context.User.Identity.Name";
        var name = '@Request.QueryString["nameTo"]';
        var validUser = 0;
        if (name != null && name != "") {
            @foreach (var u in ViewBag.users)
            { <text>
                if ('@u.username' == name) {
                    validUser = 1;
                }
            </text> }

            if (validUser == 1) {
                if (name != null && name != "") {
                    chatWithFunction(name, null, null);
                }
            } else {
                window.location.href = "/Chat/Chat";
            }
        }

        usernameFrom = "@Context.User.Identity.Name";
        
        chat.client.loadLastMessages = function (previousMessages) {
            if (previousMessages != null) {
                for (var j = 0; j < previousMessages.length; j++) {
                    var dateTemp = new Date(previousMessages[j].DateCreated);
                    $('#' + chatWith + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(previousMessages[j].Sender) +
                        '</strong>: ' + htmlEncode(previousMessages[j].Message) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateTemp) + '</small></span>');
                }
                var objDiv = document.getElementById(chatWith + "Window");
                objDiv.scrollTop = objDiv.scrollHeight;
            }
        }

        chat.client.addNewMessageToPageInitial = function (name, message, dateCreated, dayOfWeekS) {
            var imageForUser;
                @foreach (var u in ViewBag.users)
            {
                var imgSrc = "/Content/img/empty.png";
                if (u.profilePicture != null)
                {
                    var base64 = Convert.ToBase64String(@u.profilePicture);
                    imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                }
                var usernameFrom2 = "@Context.User.Identity.Name";

                <text>
            if (name == '@u.username') {
                imageForUser = '<img src="@imgSrc" height="25" width="25"/ >';
            }
                </text>

            }
            if (message != null) {

                var characterCount = message.length;
                if (characterCount < 20) {
       
                    $('#discussion').append('<font size="2"><i>Sent at:&nbsp&nbsp&nbsp&nbsp&nbsp [</font><font size="2">' + '        ' + '' + dateCreated + "&nbsp&nbsp" + dayOfWeekS + ']</font>' + ' </i>' + '<br><li><strong>' + imageForUser + htmlEncode(name) +
              '</strong>:&nbsp   ' + htmlEncode(message) + '</li><br/>')

                    transferTextToSmile();
                    var objDiv = document.getElementById("chatRoom");
                    objDiv.scrollTop = objDiv.scrollHeight;
                } else {
                    //Funkcija za prekoracenje karaktera u panelu.Ako prekoraci ide u newLine
                    var str = message;
                    var arrayMessage = [];
                    var messageConstraint = 72;

                    while (str) {
                        if (str.length < messageConstraint) {
                            arrayMessage.push(str);
                            break;
                        }
                        else {
                            arrayMessage.push(str.substr(0, messageConstraint));
                            str = str.substr(messageConstraint);
                        }
                    }
                    $('#discussion').append('<font size="2"><i>Sent at:&nbsp&nbsp&nbsp&nbsp&nbsp[ </font><font size="2">' + '       ' + ''+timestamp + hr + ':' + min + ':' + sec + ']</font>' + ' </i>' + '<br><li><strong>' + imageForUser + htmlEncode(name) +
                                    '</strong>:   ')
                    for (var i = 0; i < arrayMessage.length; i++) {
                        //funkcija za smjlije

                        $('#discussion').append(htmlEncode(arrayMessage[i]) + '</li><br/>')
                        var objDiv = document.getElementById("chatRoom");
                        transferTextToSmile();
                        objDiv.scrollTop = objDiv.scrollHeight;
                    }
                }

        }

        }

        //meda
        chat.client.addNewMessageToPage = function (name, message, recipientName, previousMessages) {
            
            if (recipientName != null) {
                var dateForTimestamp = new Date();
                if (previousMessages != null) {
                    if (loadPrivateMessages === 0) {
                        for (var j = 0; j < previousMessages.length; j++) {
                            var dateTemp = new Date(previousMessages[j].DateCreated);
                            $('#' + name + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(previousMessages[j].Sender) +
                                '</strong>: ' + htmlEncode(previousMessages[j].Message) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateTemp) + '</small></span>');
                            loadPrivateMessages = 1;
                        }
                        var objDiv = document.getElementById(name + "Window");
                        objDiv.scrollTop = objDiv.scrollHeight;
                    } else {
                        $('#' + name + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(name) +
                                '</strong>: ' + htmlEncode(message) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateForTimestamp) + '</small></span>');
                        var objDiv = document.getElementById(name + "Window");
                        objDiv.scrollTop = objDiv.scrollHeight;
                    }
                }
            } else {

                var imageForUser;
                @foreach (var u in ViewBag.users)
                {
                        var imgSrc = "/Content/img/empty.png";
                        if (u.profilePicture != null)
                        {
                    var base64 = Convert.ToBase64String(@u.profilePicture);
                            imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                        }
                    var usernameFrom2 = "@Context.User.Identity.Name";

                    <text>
                if (name == '@u.username') {
                    imageForUser = '<img src="@imgSrc" height="25" width="25"/ >';
                }
                </text>

                }
                if (message != null) {

                    var day = new Date();
                    var hr = day.getHours();
                    var min = day.getMinutes();
                    var sec = day.getSeconds();
                    var characterCount = message.length;
                    if (characterCount < 20) {

                        $('#discussion').append('<font size="2"><i>Sent at:&nbsp&nbsp&nbsp&nbsp&nbsp [</font><font size="2">' + '        ' + '' + timestamp + hr + ':' + min + ':' + sec  + ']</font>' + ' </i>' + '<br><li><strong>' + imageForUser + htmlEncode(name) +
                    '</strong>:&nbsp   ' + htmlEncode(message) + '</li><br/>')

                        transferTextToSmile();
                        var objDiv = document.getElementById("chatRoom");
                        objDiv.scrollTop = objDiv.scrollHeight;
                    } else {
                        //Funkcija za prekoracenje karaktera u panelu.Ako prekoraci ide u newLine
                        var str = message;
                        var arrayMessage = [];
                        var messageConstraint = 72;

                        while (str) {
                            if (str.length < messageConstraint) {
                                arrayMessage.push(str);
                                break;
                            }
                            else {
                                arrayMessage.push(str.substr(0, messageConstraint));
                                str = str.substr(messageConstraint);
                            }
                        }
                        $('#discussion').append('<font size="2"><i>Sent at:&nbsp&nbsp&nbsp&nbsp&nbsp[ </font><font size="2">' + '       ' + '' + hr + ':' + min + ':' + sec + ']</font>' + ' </i>' + '<br><li><strong>' + imageForUser + htmlEncode(name) +
                                        '</strong>:   ')
                        for (var i = 0; i < arrayMessage.length; i++) {
                            //funkcija za smjlije

                            $('#discussion').append(htmlEncode(arrayMessage[i]) + '</li><br/>')
                            var objDiv = document.getElementById("chatRoom");
                            transferTextToSmile();
                            objDiv.scrollTop = objDiv.scrollHeight;
                        }
                    }
                }
            }
        }
        
        //meda

        $('#message').focus();
        //react on enter Mihajlo M.
        $.connection.hub.start().done(function () {
            chat.server.initialCheckUp();
            $('#message').keypress(function (e) {
                if (e.which == 13) {
                    e.preventDefault();
                    if ($('#message').val().trim() != "") {
                        chat.server.send(usernameFrom, $('#message').val(), null);
                        $('#message').val('').focus();
                    }
                }
            });
        });
        $(document).ready(function () {
            $("#sendMessage").click(function () {
                chat.server.send(usernameFrom, $('#message').val(), null);
                $('#message').val('').focus();
            });
        });
        
        var not = $.connection.chatHub;
        $(function () {
            
            not.client.broadcastNotification = function (name, message, recipientName, previousMessages) {
                if (message != null) {
                    chatWithFunction(name, message, previousMessages);
                }
            }
        });


        $.connection.hub.start().done(function () {
            
            var chatInputEnter = document.getElementById(chatWith + "ChatInput");
            var dateForTimestamp = new Date();


            if ($('#' + usernameFrom + "ChatInput").val() != null) {
                chat.server.send(usernameFrom, $('#' + usernameFrom + "ChatInput").val(), chatWith);
                $('#' + chatWith + 'UlWindow').append('<p>' + returnTimestamp(dateForTimestamp) + '</p><li><strong>' + htmlEncode("Me") +
                        '</strong>: ' + htmlEncode(messageTemp) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateForTimestamp) + '</small></span>');
            } 

        });
    });

    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
    var ulaz = 0;
    var i = 1;  //flag otvorenog chat prozora
    var inc = 300; //inkrement desne margine novog chat prozora
    function chatWithFunction(username, message, previousMessages) {
        showHide[i - 1] = i;

       

        var numItems = $('.chatProzor').length
        var userWindow = $('' + username + 'Window').length;

        if (showHide[0] === 1) {
            if (numItems < 3) {
                chatWith = username;
                var divCheck = document.getElementById('' + username + 'Window');

                if (divCheck == null) {
                    document.getElementById("zaChat").innerHTML = document.getElementById("zaChat").innerHTML +
                        "<div id=\"" + username + "Window\" name=\"" + username + "\" style=\"margin-right:" + inc +
                        "px; text-align: justify; display: inline-block; overflow-y:scroll;\" class=\"chatProzor\"><div name=\"" + username +
                        "\" class=\"ChatHeaderDiv\" id=\"Div" + username + "\"><p class=\"ChatHeader\"></p></div><ul class=\"moja\" id=\"" + username + "UlWindow\"></ul><input onkeydown=\"if (event.keyCode == 13) { doIt('" + username + "'); return false; }\" size=\"42\" class=\"myChatInput\" id=\"" +
                        username + "ChatInput\"/></div>"
                    
                    inc += 330;

                    $.connection.hub.start().done(function () {
                        chat.server.loadPrivateMessagesHistory(username, "@Context.User.Identity.Name");
                    });
                } else {
                    return;
                }

                var dateForTimestamp = new Date();
                if (message != null) {
                    $('#' + username + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(username) +
                          '</strong>: ' + htmlEncode(message) + '</li><span class="badge lowerCase"><small>' + returnTimestamp(dateForTimestamp) + '</small></span>');
                }

                var divHeader = document.getElementById(username + "Window");
                var divHeader2 = document.getElementById("Div" + username);
                var childDivs = document.getElementById(username + "Window").getElementsByTagName('div');

                for (i = 0; i < childDivs.length; i++) {
                    var child = childDivs[i];
                    child.innerHTML = "<small style=\"color:white;font-style:normal;\">" + divHeader.getAttribute('name') + "</small>"
                }
                divHeader.style.color = "#575757";
                divHeader2.innerHTML = divHeader2.innerHTML + "<span onClick=\"dismissChat('" + username + "Window" + "');\" style=\"float:right; color:white; padding-top:2px;\" class=\"glyphicon glyphicon-remove\"></span>";

                
                $("#" + username + "ChatInput").focus();
            }
        } else {
            dismissChat(username + "Window");
        }
        i++;
    }

    function dismissChat(div) {
        if (showHide[0] === 1) {
            var dvi2 = [];
            var elem = $("div[id$='Window']");
            var element = document.getElementById(div);

            for (var b = 0; b < elem.length; b++) {

                if (elem[b].style.marginRight > element.style.marginRight) {

                    var size = parseInt(document.getElementById(elem[b].id).style.marginRight) - 330;

                    document.getElementById(elem[b].id).style.marginRight = size + "px";

                    dvi2.push(elem[b].id);
                }
            }
            if (elem.length == 1) {

                inc = 300;
            } else {
                inc -= 330;
            }
            $('#' + div).remove();
            loadPrivateMessages = 0;
            for (var c = 0; c < dvi2.length; c++) {
                var windowUsername = dvi2[c].replace("Window", "")
                $("#" + windowUsername + "ChatInput").focus();
            }

            if (dvi2.length == 0) {
                var windowUsername = dvi2[0].replace("Window", "")
                $("#" + windowUsername + "ChatInput").focus();
            }


        } else {
            $('#' + div).show();
        }
    };





    function transferTextToSmile() {
        var smiles = {

            "<3": "/Content/smile/heart.png",
            "o:)": "/Content/smile/angel.png",
            "o.O": "/Content/smile/bigeye.png",
            "O.o": "/Content/smile/bigeye.png",
            "3:)": "/Content/smile/devil.png",
            ":/": "/Content/smile/diss.png",
            "8)": "/Content/smile/glasses.png",
            ":*": "/Content/smile/kiss.png",
            "(y)": "/Content/smile/ok.png",
            ":v": "/Content/smile/pacman.png",
            ":)": "/Content/smile/simplesmile.png",
            ":D": "/Content/smile/smiling.png",
            "8|": "/Content/smile/sunglasses.png",
            ":O": "/Content/smile/suprise.png",
            ":P": "/Content/smile/tonque.png",
            ":'(": "/Content/smile/plac.png",
            ";)": "/Content/smile/namig.png",
            ":(": "/Content/smile/sad.png",

        };
        var replacements = [];

        onEachTextNode(document.body, function (node) {
            var newNode = replaceTokensWithImages(node, smiles);
            replacements.push([node, newNode]);
        });

        replacements.forEach(function (replacement) {
            var node, newNode;
            node = replacement[0];
            newNode = replacement[1];

            node.parentNode.replaceChild(newNode, node);
        });

        function onEachTextNode(base, cb) {
            var iterator =
                document.createNodeIterator(base, NodeFilter.SHOW_TEXT, nonEmptyText);

            var currentNode = iterator.nextNode();

            while (currentNode !== null) {
                cb(currentNode);
                currentNode = iterator.nextNode();
            }

            function nonEmptyText(node) {
                return node.textContent.search(/\S/) !== -1 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;
            }
        }

        function replaceTokensWithImages(textNode, map) {
            var fragment = document.createDocumentFragment();
            fragment.appendChild(textNode.cloneNode(true));

            return Object.keys(map).reduce(function (node, token) {
                return replaceTokenWithImage(node, token, map[token]);
            }, fragment);
        }

        function replaceTokenWithImage(fragment, token, imageUrl) {
            var newFragment = document.createDocumentFragment();

            [].forEach.call(fragment.childNodes, function (node) {
                if (node.nodeType !== document.TEXT_NODE) {
                    newFragment.appendChild(node.cloneNode(true));
                    return;
                }

                var text = node.textContent;
                var sections = text.split(token);

                var current, hasNext;
                for (var i = 0; i < sections.length; i++) {
                    current = sections[i];
                    hasNext = (i + 1) in sections;

                    newFragment.appendChild(new Text(current));

                    if (hasNext) {
                        newFragment.appendChild(createImage());
                    }
                }
            });

            return newFragment;

            function createImage() {
                var image = new Image();
                image.src = imageUrl;
                image.alt = token;
                return image;
            }
        }
    }

</script>

<div class="scroller" style="position:fixed;top:0; right:0; padding-right:0px;  padding-top:50px; width: 250px; background-color: #d3d3d3; height:100%; ">
    @foreach (var u in ViewBag.users)
{
    var activityImage = "/Content/smile/online.png";
    var imgSrc = "/Content/img/empty.png";
    if (u.profilePicture != null)
    {
        var base64 = Convert.ToBase64String(@u.profilePicture);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);

    }
    var usernameFrom2 = "@Context.User.Identity.Name";

    if (Context.User.Identity.Name == @u.username)
    {
        continue;
    }
    else
    {
        if (@u.activity == true)
        {
            <a onclick="chatWithFunction('@u.username',null, null)" class="list-group-item"><img src="@imgSrc" height="27" width="27" />@u.firstName @u.lastName <img style="float:right; margin-top:6px;" src="/Content/smile/online1.png" height="15" width="15" /></a>
        }
        else
        {

            <a onclick="chatWithFunction('@u.username',null, null)" class="list-group-item"><img src="@imgSrc" height="27" width="27" />@u.firstName @u.lastName <img style="float: right; margin-top: 6px" src="/Content/smile/offline1.png" height="15" width="15" /></a>
        }
        

    }
    

}
</div>
