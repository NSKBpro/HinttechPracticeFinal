<h2>Chat</h2>
<head>
    <title>Chat</title>
    <style>
        #chatRoom {
            height: 300px;
            overflow-y: scroll;
            width: 100%;

        }

    </style>
</head>


    <div id="zaChat"></div>

<div class="panel panel-default" style="max-width: 700px; float:inherit">
    <div class="panel-footer" style="height:600px"id="chatRoom">
        <input type="hidden" id="displayName" /> <a id="chatWith"></a>
        <ul id="discussion"></ul>
    </div>
    <div class="panel-body" style="max-width: 700px;" id="chatPanel">
        <textarea class="form-control" id="message" style="min-width: 100%" rows="3"></textarea>
        <input class="btn btn-primary  btn-block" type="button" id="sendMessage" value="Send" />
    </div>
</div>
    
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>

        var chatWith;
        var usernameFrom;
        var showHide = [];
        var chat = $.connection.chatHub;
        var messageTemp;

        function doIt(to) {
            $(function () {

                usernameFrom = "@Context.User.Identity.Name"
                
                chat.client.addNewMessageToPage = function (name, message, recipientName) {
                    $('#' + name + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(name) +
                        '</strong>: ' + htmlEncode(message) + '</li>');
                    
                };

                $("#" + to + "ChatInput").focus();
                $.connection.hub.start().done(function () {

                    var chatInputEnter = document.getElementById(to + "ChatInput");

                    messageTemp = $("#" + to + "ChatInput").val();
                    chat.server.send(usernameFrom, $("#" + to + "ChatInput").val(), to);
                    $('#' + to + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode("Me") +
                        '</strong>: ' + htmlEncode(messageTemp) + '</li>');
                    
                    $("#" + to + "ChatInput").val('').focus();
                });

            });
            var objDiv = document.getElementById(to + "Window");
            objDiv.scrollTop = objDiv.scrollHeight;
        }

        $(function doIt2() {

            usernameFrom = "@Context.User.Identity.Name"

            //meda
            chat.client.addNewMessageToPage = function (name, message, recipientName) {

                if (recipientName != null) {
                    $('#' + name + 'UlWindow').append('<li><strong>' + htmlEncode(name) +
                        '</strong>: ' + htmlEncode(message) + '</li>');
 
                } else {

                    var imageForUser;
                    @foreach (var u in ViewBag.users)
                    {
                        var imgSrc = "/Content/img/empty.png";
                        if (u.profilePicture != null)
                        {
                        var base64 = Convert.ToBase64String(@u.profilePicture);
                            imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                        }
                        var usernameFrom2 = "@Context.User.Identity.Name";


                        <text>
                        if (name == '@u.username') {
                            imageForUser = '<img src="@imgSrc" height="25" width="25"/ >';
                        }
                    </text>
                    }

                    $.connection.hub.start().done(function () {
                        chat.server.send(usernameFrom, $('#message').val(), null);
                        $('#discussion').append('<li><strong>' + imageForUser + htmlEncode(name) +
                  '</strong>: ' + htmlEncode(message) + '</li>')
                    });  
                }
            }
            //meda
            
            $('#message').focus();
            

            $.connection.hub.start().done(function () {

                var chatInputEnter = document.getElementById(chatWith + "ChatInput");
  
                chat.server.send(usernameFrom, $('#' + usernameFrom + "ChatInput").val(), chatWith);
                $('#' + chatWith + 'UlWindow').append('<li><strong>' + htmlEncode("Me") +
                        '</strong>: ' + htmlEncode(messageTemp) + '</li>');
            });
        });

        $(function () {

            usernameFrom = "@Context.User.Identity.Name"

            //meda
            chat.client.addNewMessageToPage = function (name, message, recipientName) {

                if (recipientName != null) {
                    $('#' + name + 'UlWindow').append('<li class=\"moja\"><strong>' + htmlEncode(name) +
                        '</strong>: ' + htmlEncode(message) + '</li>');
 
                } else {

                    var imageForUser;
                    @foreach (var u in ViewBag.users)
                {
                        var imgSrc = "/Content/img/empty.png";
                        if (u.profilePicture != null)
                        {
                    var base64 = Convert.ToBase64String(@u.profilePicture);
                            imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                        }
                    var usernameFrom2 = "@Context.User.Identity.Name";

                    <text>
                    if (name == '@u.username') {
                        imageForUser = '<img src="@imgSrc" height="25" width="25"/ >';
                    }
                    </text>
               
                }
                    if (message != null) {
                       
                        var day = new Date();
                        var hr = day.getHours();
                        var min = day.getMinutes();
                        var sec = day.getSeconds();
                        var characterCount = message.length;
                        if (characterCount < 20) {
                       
                             $('#discussion').append('<font size="3"><i>Sent at: [' + '       ' + '' + hr + ':' + min + ':' + sec + '</font>' + ' ]</i>' + '<br><li><strong>' + imageForUser + htmlEncode(name) +
                          '</strong>:   ' + htmlEncode(message) + '</li><br/>')
                             transferTextToSmile();
                             var objDiv = document.getElementById("chatRoom");
                             objDiv.scrollTop = objDiv.scrollHeight;
                         } else {
                             //Funkcija za prekoracenje karaktera u panelu.Ako prekoraci ide u newLine
                             var str = message;
                             var arrayMessage = [];
                             var messageConstraint = 72;

                             while (str) {
                                 if (str.length < messageConstraint) {
                                     arrayMessage.push(str);
                                     break;
                }
                                 else {
                                     arrayMessage.push(str.substr(0, messageConstraint));
                                     str = str.substr(messageConstraint);
                }
            }
                             for (var i = 0; i < arrayMessage.length; i++) {
                                 //funkcija za smjlije
                                 transferTextToSmile();
                                 $('#discussion').append('<font size="3"><i>Sent at: [' + '       ' + '' + hr + ':' + min + ':' + sec + '</font>' + ' ]</i>' + '<br><li><strong>' + imageForUser + htmlEncode(name) +
                            '</strong>:   ' + htmlEncode(arrayMessage[i]) + '</li><br/>')
                                 var objDiv = document.getElementById("chatRoom");
                                 objDiv.scrollTop = objDiv.scrollHeight;
                             }
                         }
                    }
                }
            }
            //meda
            
            $('#message').focus();
            //react on enter Mihajlo M.
            $.connection.hub.start().done(function () {
                $('#message').keypress(function (e) {
                    if (e.which == 13) {
                        chat.server.send(usernameFrom, $('#message').val(), null);
                        $('#message').val('').focus();
                        e.preventDefault();
                    }
                });
            });

        

            $.connection.hub.start().done(function () {

                var chatInputEnter = document.getElementById(chatWith + "ChatInput");
  
                chat.server.send(usernameFrom, $('#' + usernameFrom + "ChatInput").val(), chatWith);
                $('#' + chatWith + 'UlWindow').append('<li><strong>' + htmlEncode("Me") +
                        '</strong>: ' + htmlEncode(messageTemp) + '</li>');
            });
        });
        
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        var i = 1;  //flag otvorenog chat prozora
        var inc = 300; //inkrement desne margine novog chat prozora
        function chatWithFunction(username) {
            showHide[i-1] = i;
            
            var numItems = $('.chatProzor').length
            var userWindow = $('' + username + 'Window').length;

            if (showHide[0] === 1) {
                if (numItems < 3) {
                    chatWith = username;
                    var divCheck = document.getElementById('' + username + 'Window');

                    if (divCheck == null) {
                        document.getElementById("zaChat").innerHTML = document.getElementById("zaChat").innerHTML +
                            "<div id=\"" + username + "Window\" name=\"" + username + "\" style=\"margin-right:" + inc +
                            "px; text-align: justify; display: inline-block; overflow-y:scroll;\" class=\"chatProzor\"><div name=\"" + username +
                            "\" class=\"ChatHeaderDiv\" id=\"Div" + username + "\"><p class=\"ChatHeader\"></p></div><ul id=\"" + username + "UlWindow\"></ul><input onkeydown=\"if (event.keyCode == 13) { doIt('" + username + "'); return false; }\" size=\"42\" class=\"myChatInput\" id=\"" +
                            username + "ChatInput\"/></div>"
                        
                        inc += 330;
                    } else {
                        return;
                    }
                    var divHeader = document.getElementById(username + "Window");
                    var divHeader2 = document.getElementById("Div" + username);
                    var childDivs = document.getElementById(username + "Window").getElementsByTagName('div');

                    for (i = 0; i < childDivs.length; i++) {
                        var child = childDivs[i];
                        child.innerHTML = "<strong>" + divHeader.getAttribute('name') + "</strong>"
                    }
                    divHeader.style.color = "#575757";
                    divHeader2.innerHTML = divHeader2.innerHTML + "<span onClick=\"dismissChat('" + username + "Window" + "');\" style=\"float:right; padding-top:2px;\" class=\"glyphicon glyphicon-remove\"></span>";
                }
            } else {
                dismissChat(username + "Window");
            }
            i++;
        }

        function dismissChat(div) {
            if (showHide[0] === 1) {
                var dvi2;
                var elem = $("div[id$='Window']");
                var element = document.getElementById(div);
                
                for (var b = 0; b < elem.length; b++) {
  
                    if (elem[b].style.marginRight > element.style.marginRight) {
                        
                        var size = parseInt(document.getElementById(elem[b].id).style.marginRight) - 330;

                        
                        document.getElementById(elem[b].id).style.marginRight = size + "px";
                        dvi2 = elem[b].id;
                    } else {
                        dvi2 = elem[0].id;
                    }
                }
                $('#' + div).remove();
                var windowUsername = dvi2.replace("Window","")
                $("#" + windowUsername + "ChatInput").focus();
                inc -= 330;
            } else {
                $('#' + div).show();
            }
        };





        function transferTextToSmile()
        {
            var smiles = {

                "<3": "/Content/smile/heart.png",
                "o:)": "/Content/smile/angel.png",
                "o.O": "/Content/smile/bigeye.png",
                "O.o": "/Content/smile/bigeye.png",
                "3:)": "/Content/smile/devil.png",
                ":/": "/Content/smile/diss.png",
                "8)": "/Content/smile/glasses.png",
                ":*": "/Content/smile/kiss.png",
                "(y)": "/Content/smile/ok.png",
                ":v": "/Content/smile/pacman.png",
                ":)": "/Content/smile/simplesmile.png",
                ":D": "/Content/smile/smiling.png",
                "8|": "/Content/smile/sunglasses.png",
                ":O": "/Content/smile/suprise.png",
                ":P": "/Content/smile/tonque.png",

            };
            var replacements = [];

            onEachTextNode(document.body, function (node) {
                var newNode = replaceTokensWithImages(node, smiles);
                replacements.push([node, newNode]);
            });

            replacements.forEach(function (replacement) {
                var node, newNode;
                node = replacement[0];
                newNode = replacement[1];

                node.parentNode.replaceChild(newNode, node);
            });

            function onEachTextNode(base, cb) {
                var iterator =
                    document.createNodeIterator(base, NodeFilter.SHOW_TEXT, nonEmptyText);

                var currentNode = iterator.nextNode();

                while (currentNode !== null) {
                    cb(currentNode);
                    currentNode = iterator.nextNode();
                }

                function nonEmptyText(node) {
                    return node.textContent.search(/\S/) !== -1 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;
                }
            }

            function replaceTokensWithImages(textNode, map) {
                var fragment = document.createDocumentFragment();
                fragment.appendChild(textNode.cloneNode(true));

                return Object.keys(map).reduce(function (node, token) {
                    return replaceTokenWithImage(node, token, map[token]);
                }, fragment);
            }

            function replaceTokenWithImage(fragment, token, imageUrl) {
                var newFragment = document.createDocumentFragment();

                [].forEach.call(fragment.childNodes, function (node) {
                    if (node.nodeType !== document.TEXT_NODE) {
                        newFragment.appendChild(node.cloneNode(true));
                        return;
                    }

                    var text = node.textContent;
                    var sections = text.split(token);

                    var current, hasNext;
                    for (var i = 0; i < sections.length; i++) {
                        current = sections[i];
                        hasNext = (i + 1) in sections;

                        newFragment.appendChild(new Text(current));

                        if (hasNext) {
                            newFragment.appendChild(createImage());
                        }
                    }
                });

                return newFragment;

                function createImage() {
                    var image = new Image();
                    image.src = imageUrl;
                    image.alt = token;
                    return image;
                }
            }
        }
    </script>

<div class="list-group" style="position: fixed; right: 0; top: 50px; padding: 0; margin: 0; width: 250px; height: 100%; background-color: #d3d3d3; ">
    @foreach (var u in ViewBag.users)
    {

        var imgSrc = "/Content/img/empty.png";
        if (u.profilePicture != null)
        {
        var base64 = Convert.ToBase64String(@u.profilePicture);
            imgSrc = String.Format("data:image/gif;base64,{0}", base64);

        }
        var usernameFrom2 = "@Context.User.Identity.Name";

        if (Context.User.Identity.Name == @u.username)
        {
            continue;
        }
        else
        {
            <a onclick="chatWithFunction('@u.username')" class="list-group-item"><img src="@imgSrc" height="27" width="27" />@u.firstName @u.lastName</a>
        }

    }
</div>



