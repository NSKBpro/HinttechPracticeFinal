@model HinttechPractice.Data.Vacation

<script>
    function funProvera() {
        var proveraDani=@(ViewBag.BrDana);
        var datum1 = "@(ViewBag.editDateFrom)";
        var datum2 = document.getElementById("datum2").value;

        var oneDay = 24 * 60 * 60 * 1000;
        var dodatak= 20 - proveraDani;
        var diffDays = Math.round(Math.abs((new Date(datum2) - new Date("@ViewBag.editDateTo")) / (oneDay)));
        if (diffDays > proveraDani) {
            
            alertify
                    .alert("You choose more then " + proveraDani +" days", function () {
                        alertify.error('Please try again');
                    });
            return false;

        }
        if (datum2 < datum1) {
            alertify.error("Incorrect.Please try again with new date");
            return false;
        }else{
            alertify.success("Well done you can proceed now");
            return true;
        }
    }
</script>



@using (Html.BeginForm("EditVacation", "LoadVacations", FormMethod.Post, new { onsubmit = "return funProvera()" }))
{
    @Html.AntiForgeryToken()
    <br /><br />
    <div class="row" align="center">
    <div class="col-md-4 col-md-offset-4 bg-success">
        @Html.ValidationSummary(true)
  
        <div class="form-group">

            <div class="col-md-10">
                @Html.HiddenFor(model => model.VacationPeriodId)
                @Html.ValidationMessageFor(model => model.VacationPeriodId)
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.HiddenFor(model => model.UserId)
                @Html.ValidationMessageFor(model => model.UserId)
            </div>
        </div>

        <div class="form-group">
           @if ((DateTime.Parse(@ViewBag.Datum)) > (DateTime.Parse(@ViewBag.editDateFrom))) { 
            <div class="col-md-10">
                <input type="date" id="datum3" name="DateFrom" required class="form-control" value="@ViewBag.editDateFrom" readonly />
            </div>
           }
           else
           {
             <div class="col-md-10">
                 <input type="date" id="datum1" name="DateFrom" required class="form-control" value="@ViewBag.editDateFrom" />
            </div>  
           }
        </div>

        <div class="form-group">
           
            <div class="col-md-10">
                <input type="date" id="datum2" name="DateTo" required class="form-control" value="@ViewBag.editDateTo" />
            </div>
        </div>

        <div class="form-group">
            
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control text-info" } })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            
            <div class="col-md-10">
                @Html.HiddenFor(model => model.IsSickLeave, new { htmlAttributes = new { @class = "checkbox" } })
                @Html.ValidationMessageFor(model => model.IsSickLeave)
            </div>
        </div>
        <input type="hidden" value="@Request.QueryString["page"]" name="page"/>
        <div class="form-group">
            <div class="col-md col-md-10">
                <input type="submit" value="Save" class="btn btn-success btn-block" />

            </div>
        </div>
    </div>
        </div>
}
<br />



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
